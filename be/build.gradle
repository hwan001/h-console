plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'io.h001'
version = '0.0.1-SNAPSHOT'
description = "Let's manage my k8s clusters via the web"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger-UI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// DB client (Hasura)
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// netty dns for mac silicon
	implementation "io.netty:netty-resolver-dns-native-macos:4.1.127.Final:osx-aarch_64"

	// grpc
	implementation 'io.grpc:grpc-netty-shaded:1.66.0'
    implementation 'io.grpc:grpc-protobuf:1.66.0'
    implementation 'io.grpc:grpc-stub:1.66.0'
    implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
	compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
	useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.66.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir '../protos' // 👈 루트 protos 폴더 참조
        }
        java {
            srcDirs += ['build/generated/source/proto/main/java',
                        'build/generated/source/proto/main/grpc']
        }
    }
}